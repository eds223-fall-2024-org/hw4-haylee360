---
title: "Homework Assignment #4"
subtitle: "Prioritizing potential aquaculture"
author: "Haylee Oyler"
date: last-modified
execute: 
  eval: true
  warning: false
  message: false
format:
  html:
    toc: true
editor_options: 
  chunk_output_type: console
---

### Load packages

```{r}
#| code-fold: true
#| code-summary: "Reveal code"

library(sf)
library(here)
library(terra)
library(tmap)
library(tidyverse)
library(viridisLite)
library(RColorBrewer)
library(kableExtra)
library(testthat)
library(patchwork)
```

How to add the names of the EEZ to the legend/map??
```{r}
source("aqua_fun.R")
aqua_fun("Dungeness Crab", 3, 19, -360, 0)
```

## Read in data

```{r}
eez <- read_sf(here("data", "wc_regions_clean.shp"))
depth <- terra::rast(here("data", "depth.tif"))

# Create list of sst files
sst_files <- list.files(here("data"), 
                        pattern = "average", 
                        full.names = TRUE)
# Read in sst rasters 
sst <- c(rast(sst_files))
```

### Check that CRS match

```{r}
#| code-fold: true
#| warning: true
#| code-summary: "Reveal code"

if(st_crs(eez) == st_crs(depth)) {
  print("Coordinate reference systems match")
} else{
  warning("Updating coordinate reference systems to match")
  # transform data to match
  eez <- st_transform(eez, st_crs(depth))
}

if(st_crs(sst) == st_crs(depth)) {
  print("Coordinate reference systems match")
} else{
  warning("Updating coordinate reference systems to match")
  # transform data to match
  sst <- project(sst, crs(depth))
}
```


## Process data

```{r}
# Find the mean sst and convert to Celsius
mean_sst <- app(sst, fun = mean)
mean_sst <- mean_sst - 273.15

# Crop the depth raster to match extent of sst
depth_crop <- crop(depth, mean_sst)

# Resample depth to match resolution of sst
depth_resample <- resample(depth_crop, y = mean_sst, method = "near")

# Check that resolution, extent, and CRS match
test_stack <- c(depth_resample, mean_sst)
```


## Find suitable locations
Reclassify SST and depth data into locations that are suitable for oysters

```{r}
# create sst reclassification matrix
rcl_sst <- matrix(c(-Inf, 11, NA, 
                    11, 30, 1, 
                    30, Inf, NA),
                    ncol = 3, byrow = TRUE)

# use reclassification matrix to reclassify sst raster
reclass_sst <- classify(mean_sst, rcl = rcl_sst)

plot(reclass_sst, main = "Suitable SST regions")
```


```{r}
# create sst reclassification matrix
rcl_depth <- matrix(c(-Inf, -70, NA, 
                    -70, 0, 1, 
                    0, Inf, NA),
                    ncol = 3, byrow = TRUE)

# use reclassification matrix to reclassify sst raster
reclass_depth <- classify(depth_resample, rcl = rcl_depth)

plot(reclass_depth, main = "Suitable depth regions")
```

```{r}
# find locations that satisfy both SST and depth conditions
sst_depth <- lapp(c(reclass_sst, reclass_depth), fun = "*")

plot(sst_depth, main = "Suitable SST and depth regions")
```

## Determine the most suitable EEZ
We want to determine the total suitable area within each EEZ in order to rank zones by priority. To do so, we need to find the total area of suitable locations within each EEZ.

```{r}
# Find area of suitable cells 
suitable_area <- cellSize(x = sst_depth, # places where sst and depth match
                          mask = TRUE, # keeps NA values
                          unit = 'km') # Selecting km from data


# Rasterize EEZ data
eez_raster <- rasterize(eez,
                        suitable_area, # to this raster
                        field = 'rgn') # Transfer values to each eez region



# sst_depth_eez <- eez_raster*sst_depth
# # Initial plot
# plot(sst_depth_eez)


# Use zonal algebra to sum the suitable area by region
eez_suitable <- zonal(x = suitable_area, 
                      z = eez_raster, # Raster representing zones
                      fun = 'sum', # To add up total area
                      na.rm = TRUE)

# To map our eez area with geometry later on
eez <- left_join(eez, eez_suitable)

kable(eez_suitable, digits = 2, caption = "Suitable area by EEZ (km^2)")

```



```{r}
#| code-fold: true
#| code-summary: "Reveal code"

# Plot regions and suitable areas together
tm_shape(depth) +
  tm_raster(palette = "-GnBu",
            title = "Bathymetry (m)",
            midpoint = 0,
            legend.show = TRUE) +
  # tm_shape(eez) +
  # tm_borders(col = "black",
  #            lwd = 1.5) +
  tm_shape(eez) +
  tm_polygons(col = "area",
              palette = "Reds",
              alpha = 0.8,
              linewidth = 0.2,
              title = "Suitable habitat area (km^2)") +
  # tm_shape(sst_depth_vec) +
  # tm_fill(col = "red") +
  # tm_shape(sst_depth) +
  # tm_raster(palette = "Set1",
  #           label = "Suitable habitat",
  #           title = " ") +
  tm_compass(size = 1,
             position = c("left", "bottom")) +
  tm_scale_bar(position = c("left", "bottom")) +
  tm_layout(legend.outside = TRUE,
            frame = FALSE,
            main.title = "West Coast Exclusive Economic Zones (EEZ)\nBest Suited to Oyster Aquaculture")


```


### Citations
```{r}
#| code-fold: true
#| code-summary: "Reveal code"

tribble(
  ~Data, ~Citation, ~Link,
  "Sea Surface Temperature Data", "NOAA Coral Reef Watch. 2019, updated daily. NOAA Coral Reef Watch Version 3.1 Daily 5km Satellite Regional Virtual Station Time Series Data. College Park, Maryland, USA: NOAA Coral Reef Watch. Data set accessed 2024-11-20 at https://coralreefwatch.noaa.gov/product/vs/data.php.", "[NOAA Coral Reef Watch](https://coralreefwatch.noaa.gov/product/5km/index_5km_ssta.php)",
  "Bathymetry Data", "GEBCO Compilation Group (2022) GEBCO_2022 Grid (doi:10.5285/e0f0bb80-ab44-2739-e053-6c86abc0289c)", "[GEBCO](https://www.gebco.net/data_and_products/gridded_bathymetry_data/#area)",
  "Exclusive Economic Zones", "Flanders Marine Institute (2024): MarineRegions.org. Available online at www.marineregions.org. Consulted on 2024-11-30.", "[Marine Regions](https://www.marineregions.org/eez.php)"
) %>% 
  kable()
```
