---
title: "Homework Assignment #4"
subtitle: "Prioritizing potential aquaculture"
author: "Haylee Oyler"
date: last-modified
execute: 
  eval: true
  warning: false
  message: false
format:
  html:
    toc: true
editor_options: 
  chunk_output_type: console
---

### Load packages

```{r}
#| code-fold: true
#| code-summary: "Reveal code"

library(sf)
library(here)
library(terra)
library(tmap)
library(tidyverse)
library(viridisLite)
library(RColorBrewer)
library(kableExtra)
library(testthat)
library(patchwork)
```

```{r}
source("aqua_fun.R")
aqua_fun("Dungeness Crab", 3, 19, -360, 0)
```

## Read in data

```{r}
eez <- read_sf(here("data", "wc_regions_clean.shp"))
depth <- terra::rast(here("data", "depth.tif"))

# Create list of sst files
sst_files <- list.files(here("data"), 
                        pattern = "average", 
                        full.names = TRUE)
# Read in sst rasters 
sst <- c(rast(sst_files))
```


```{r}
# sst2008 <- terra::rast(here("data", "average_annual_sst_2008.tif"))
# sst2009 <- terra::rast(here("data", "average_annual_sst_2009.tif"))
# sst2010 <- terra::rast(here("data", "average_annual_sst_2010.tif"))
# sst2011 <- terra::rast(here("data", "average_annual_sst_2011.tif"))
# sst2012 <- terra::rast(here("data", "average_annual_sst_2012.tif"))
# 
# sst <- c(sst2008, sst2009, sst2010, sst2011, sst2012)
```


```{r}
#| code-fold: true
#| code-summary: "Reveal code"

if(st_crs(eez) == st_crs(depth)) {
  print("Coordinate reference systems match")
} else{
  warning("Updating coordinate reference systems to match")
  # transform data to match
  eez <- st_transform(eez, st_crs(depth))
}

if(st_crs(sst) == st_crs(depth)) {
  print("Coordinate reference systems match")
} else{
  warning("Updating coordinate reference systems to match")
  # transform data to match
  sst <- project(sst, crs(depth))
}
```


```{r}
st_crs(eez) == st_crs(depth)
st_crs(sst) == st_crs(depth)

# st_crs(eez)
# st_crs(depth)
# st_crs(sst)
```

Pacific rock crabs
depth range 0 - 91 m

Pacific sea star
depth range 0 - 30 m 
24.7 - 29.3, mean 28.5

### Check that CRS match

```{r}
#| warning: true
#| code-fold: true
#| code-summary: "Reveal code"

# data_list <- list(depth, sst, west_eez)
# 
# for (i in 1:length(data_list)) {
#   if (st_crs(data_list[[i]]) != st_crs(depth)) {
#  warning("The CRS of do not match, transforming now...")
#   data_list[[i]] <- terra::project(data_list[[i]], depth) 
#  } else {
#     print(paste("The CRS match"))
#   }
# }

```


## Process data
find the mean SST from 2008-2012 (e.g. create single raster of average SST)
convert average SST from Kelvin to Celsius

```{r}
# depth <- project(depth, crs("EPSG:4326"))
# sst <- project(sst, crs("EPSG:4326"))

mean_sst <- app(sst, fun = mean)

mean_sst <- mean_sst - 273.15
```

```{r}
# Crop the depth raster to match extent of sst
depth_crop <- crop(depth, mean_sst)

# Resample depth to match resolution of sst
depth_resample <- resample(depth_crop, y = mean_sst, method = "near")

# Check that resolution, extent, and CRS match
test_stack <- c(depth_resample, mean_sst)
```


## Find suitable locations
reclassify SST and depth data into locations that are suitable for oysters
hint: set suitable values to 1 and unsuitable values to 0
sea surface temperature: 11-30Â°C
depth: 0-70 meters below sea level

```{r}
# create sst reclassification matrix
rcl_sst <- matrix(c(-Inf, 11, NA, 
                    11, 30, 1, 
                    30, Inf, NA),
                    ncol = 3, byrow = TRUE)

# use reclassification matrix to reclassify sst raster
reclass_sst <- classify(mean_sst, rcl = rcl_sst)

plot(reclass_sst)
```


```{r}
# create sst reclassification matrix
rcl_depth <- matrix(c(-Inf, -70, NA, 
                    -70, 0, 1, 
                    0, Inf, NA),
                    ncol = 3, byrow = TRUE)

# use reclassification matrix to reclassify sst raster
reclass_depth <- classify(depth_resample, rcl = rcl_depth)

plot(reclass_depth)
```

```{r}
# find locations that satisfy both SST and depth conditions
sst_depth <- lapp(c(reclass_sst, reclass_depth), fun = "*")

plot(sst_depth)
```

## Determine the most suitable EEZ
We want to determine the total suitable area within each EEZ in order to rank zones by priority. To do so, we need to find the total area of suitable locations within each EEZ.

select suitable cells within West Coast EEZs
find area of grid cells
find the total suitable area within each EEZ
hint: it might be helpful to rasterize the EEZ data
```{r}
# Find area of suitable cells 
suitable_area <- cellSize(x = sst_depth, # places where sst and depth match
                          mask = TRUE, # keeps NA values
                          unit = 'km') # Selecting km from data


# Rasterize EEZ data
eez_raster <- rasterize(eez,
                        suitable_area, # to this raster
                        field = 'rgn') # Transfer values to each eez region


sst_depth_eez <- eez_raster*sst_depth
# Initial plot
plot(sst_depth_eez)


# Use zonal algebra to sum the suitable area by region
eez_suitable <- zonal(x = suitable_area, 
                      z = eez_raster, # Raster representing zones
                      fun = 'sum', # To add up total area
                      na.rm = TRUE)
eez_suitable

eez <- left_join(eez, eez_suitable)

# Print suitble area by EEZ
print(paste0("Oyster suitable area in ", eez_suitable$rgn[1], " is ", round(eez_suitable$area[1], 2), 'km'))
print(paste0("Oyster suitable area in ", eez_suitable$rgn[2], " is ", round(eez_suitable$area[2], 2), 'km'))
print(paste0("Oyster suitable area in ", eez_suitable$rgn[3], " is ", round(eez_suitable$area[3], 2), 'km'))
print(paste0("Oyster suitable area in ", eez_suitable$rgn[4], " is ", round(eez_suitable$area[4], 2), 'km'))
print(paste0("Oyster suitable area in ", eez_suitable$rgn[5], " is ", round(eez_suitable$area[5], 2), 'km'))
```

```{r}
sst_depth_vec <- as.polygons(sst_depth) %>% 
  st_as_sf()
```


```{r}
# Plot regions and suitable areas together
tm_shape(depth) +
  tm_raster(palette = "-GnBu",
            title = "Bathymetry (m)",
            midpoint = 0,
            legend.show = TRUE) +
  # tm_shape(eez) +
  # tm_borders(col = "black",
  #            lwd = 1.5) +
  tm_shape(eez) +
  tm_polygons(col = "area",
              palette = "Reds",
              alpha = 0.8,
              linewidth = 0.2,
              title = "Suitable habitat area (km^2)") +
  # tm_shape(sst_depth_vec) +
  # tm_fill(col = "red") +
  # tm_shape(sst_depth) +
  # tm_raster(palette = "Set1",
  #           label = "Suitable habitat",
  #           title = " ") +
  tm_compass(size = 1,
             position = c("left", "bottom")) +
  tm_scale_bar(position = c("left", "bottom")) +
  tm_layout(legend.outside = TRUE,
            frame = FALSE,
            main.title = "West Coast Exclusive Economic Zones (EEZ)\nBest Suited to Oyster Aquaculture")


```




Old code
```{r}
# Find area of suitable cells 
# area_cell <- cellSize(sst_depth, unit = "km")
# 
# # Rasterize eez
# eez_raster <- rasterize(eez, sst_depth, field="rgn")
# plot(eez_raster)
# 
# # Clip suitable area by eez raster??
# sst_depth_eez <- area_cell[eez_raster, drop = FALSE]
# plot(sst_depth_eez)
# 
# 
# 
# # Crop by new raster
# sst_depth_eez <- sst_depth[eez_raster, drop = FALSE]
# test_eez <- eez_raster[sst_depth, drop = FALSE]
# plot(test_eez)
# # Mask raster
# # sst_depth <- mask(sst_depth, eez_raster)
# plot(sst_depth_eez)

# Zonal: summarize values in raster based on zones in raster
# zonal_oysters <- zonal(sst_depth_eez, eez_raster, fun = "sum", na.rm=TRUE)
# zonal_oysters

# the_answer <- sst_depth * area_cell
# the_answer
# 
# zonal_answer <- zonal(the_answer, eez_raster, fun = "sum", na.rm=TRUE)
# zonal_answer

```




